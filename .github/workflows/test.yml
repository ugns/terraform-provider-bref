# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Tests
on:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will 
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  # schedule:
  #   - cron: '0 13 * * *'
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - id: go-version
        run: echo "version=$(cat ./.go-version)" >> $GITHUB_OUTPUT
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ steps.go-version.outputs.version }}
      - name: Build
        run: |
          go build -v .

  # run acceptance tests in a matrix with Terraform core versions
  acceptance:
    name: Acceptance Tests (Terraform ${{ matrix.terraform }})
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        terraform:
          - '0.12.*'
          - '0.13.*'
          - '1.0.*'
          - '1.1.*'
          - '1.2.*'
          - '1.3.*'
          - '1.4.*'
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - id: go-version
        run: echo "version=$(cat ./.go-version)" >> $GITHUB_OUTPUT
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ steps.go-version.outputs.version }}
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - name: TF acceptance tests
        timeout-minutes: 10
        env:
          TF_ACC: "1"
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          go test -v -cover ./internal/provider/
